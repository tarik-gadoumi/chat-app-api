"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const relay_compiler_1 = require("relay-compiler");
const InlineFragmentsTransform = require("relay-compiler/lib/transforms/InlineFragmentsTransform");
const SkipRedundantNodesTransform = require("relay-compiler/lib/transforms/SkipRedundantNodesTransform");
const RelayApplyFragmentArgumentTransform = require("relay-compiler/lib/transforms/RelayApplyFragmentArgumentTransform");
const FlattenTransform = require("relay-compiler/lib/transforms/FlattenTransform");
function optimizeOperations(schema, documents) {
    const documentAsts = documents.reduce((prev, v) => {
        return [...prev, ...v.content.definitions];
    }, []);
    const relayDocuments = relay_compiler_1.Parser.transform(schema, documentAsts);
    const queryCompilerContext = new relay_compiler_1.GraphQLCompilerContext(schema)
        .addAll(relayDocuments)
        .applyTransforms([RelayApplyFragmentArgumentTransform.transform, InlineFragmentsTransform.transform, FlattenTransform.transformWithOptions({ flattenAbstractTypes: false }), SkipRedundantNodesTransform.transform]);
    const newQueryDocuments = queryCompilerContext.documents().map(doc => ({
        filePath: 'optimized by relay',
        content: graphql_1.parse(relay_compiler_1.Printer.print(doc)),
    }));
    return newQueryDocuments;
}
exports.optimizeOperations = optimizeOperations;
//# sourceMappingURL=optimize-operations.js.map